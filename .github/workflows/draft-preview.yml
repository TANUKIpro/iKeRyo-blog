name: üëÄ Ë®ò‰∫ã„Éó„É¨„Éì„É•„ÉºÁîüÊàê

on:
  pull_request:
    paths:
      - 'articles/drafts/**/*.md'
    types: [opened, synchronize]

jobs:
  generate-preview:
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• „ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„Éà
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: üêç PythonÁí∞Â¢É„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: üì¶ ‰æùÂ≠òÈñ¢‰øÇ„Ç§„É≥„Çπ„Éà„Éº„É´
        run: |
          pip install -r requirements.txt
      
      - name: üîç Â§âÊõ¥„Éï„Ç°„Ç§„É´Ê§úÂá∫
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: |
            articles/drafts/**/*.md
          separator: "\n"
      
      - name: üìÑ „Éó„É¨„Éì„É•„ÉºÁîüÊàê
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          mkdir -p previews
          
          cat > scripts/generate_preview.py << 'EOF'
          import sys
          from pathlib import Path
          from utils.markdown_parser import MarkdownParser
          from utils.obsidian_processor import ObsidianProcessor
          
          def generate_preview(markdown_file):
              parser = MarkdownParser()
              processor = ObsidianProcessor('.')
              
              # „Éï„Ç°„Ç§„É´Ëß£Êûê
              article_data = parser.parse_file(markdown_file)
              
              # ObsidianË®òÊ≥ïÂá¶ÁêÜ
              content = processor.process_obsidian_syntax(article_data['content'])
              
              # HTMLÂ§âÊèõ
              html_content = parser.to_html(content)
              
              # „Éó„É¨„Éì„É•„ÉºHTMLÁîüÊàê
              preview_html = f"""
          <!DOCTYPE html>
          <html lang="ja">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>{article_data['metadata'].get('title', Path(markdown_file).stem)}</title>
              <style>
                  body {{
                      max-width: 800px;
                      margin: 0 auto;
                      padding: 20px;
                      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
                      line-height: 1.6;
                  }}
                  img {{
                      max-width: 100%;
                      height: auto;
                      display: block;
                      margin: 20px auto;
                  }}
                  figure {{
                      text-align: center;
                      margin: 20px 0;
                  }}
                  figcaption {{
                      font-size: 0.9em;
                      color: #666;
                      margin-top: 10px;
                  }}
                  pre {{
                      background: #f4f4f4;
                      padding: 15px;
                      overflow-x: auto;
                      border-radius: 5px;
                  }}
                  blockquote {{
                      border-left: 4px solid #ddd;
                      margin-left: 0;
                      padding-left: 20px;
                      color: #666;
                  }}
                  .metadata {{
                      background: #f9f9f9;
                      padding: 15px;
                      border-radius: 5px;
                      margin-bottom: 30px;
                      font-size: 0.9em;
                  }}
                  .metadata strong {{
                      color: #333;
                  }}
              </style>
          </head>
          <body>
              <div class="metadata">
                  <strong>„Ç´„ÉÜ„Ç¥„É™:</strong> {article_data['metadata'].get('param_category', '„Å™„Åó')}<br>
                  <strong>„Çø„Ç∞:</strong> {article_data['metadata'].get('param_tags', '„Å™„Åó')}<br>
                  <strong>‰ΩúÊàêÊó•:</strong> {article_data['metadata'].get('param_created', 'Êú™Ë®≠ÂÆö')}
              </div>
              {html_content}
          </body>
          </html>
          """
              
              # „Éó„É¨„Éì„É•„Éº„Éï„Ç°„Ç§„É´‰øùÂ≠ò
              preview_path = Path('previews') / f"{Path(markdown_file).stem}.html"
              preview_path.write_text(preview_html, encoding='utf-8')
              
              return preview_path
          
          if __name__ == "__main__":
              markdown_file = sys.argv[1]
              preview_path = generate_preview(markdown_file)
              print(f"Preview generated: {preview_path}")
          EOF
          
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [ -f "$file" ]; then
              echo "üìÑ „Éó„É¨„Éì„É•„ÉºÁîüÊàê: $file"
              python scripts/generate_preview.py "$file"
            fi
          done
      
      - name: üì§ „Éó„É¨„Éì„É•„Éº„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: article-previews
          path: previews/
          retention-days: 7
      
      - name: üí¨ PR„Ç≥„É°„É≥„Éà„Åß„Éó„É¨„Éì„É•„Éº„É™„É≥„ÇØÂÖ±Êúâ
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const artifactUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            
            const comment = `## üëÄ Ë®ò‰∫ã„Éó„É¨„Éì„É•„Éº\n\n` +
              `„Éó„É¨„Éì„É•„ÉºHTML„ÅåÁîüÊàê„Åï„Çå„Åæ„Åó„Åü„ÄÇ\n\n` +
              `[üìÑ „Éó„É¨„Éì„É•„Éº„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ](${artifactUrl})\n\n` +
              `> **Note:** Artifacts„Çª„ÇØ„Ç∑„Éß„É≥„Åã„Çâ \`article-previews\` „Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Å¶„Éñ„É©„Ç¶„Ç∂„ÅßÈñã„ÅÑ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });